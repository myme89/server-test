name: ci-test

on:
  push:
    # branches: ["master"]
    tags:
      - "v*"

jobs:
  test:
    name: Test
    runs-on: [self-hosted, linux]

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:15
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 1
          POSTGRES_DB: postgres
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mysql:
        image: mysql:8
        env:
          MYSQL_USER: nhatnt
          MYSQL_PASSWORD: 1
          MYSQL_ROOT_PASSWORD: 1
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 3

      mongodb:
        image: mongo
        env:
          MONGO_INITDB_ROOT_USERNAME: mongo
          MONGO_INITDB_ROOT_PASSWORD: 1
          MONGO_INITDB_DATABASE: data
        options: >-
          --health-cmd "echo 'db.runCommand("ping").ok' | mongosh --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ^1.20
        id: go

      - name: Test
        run: make test

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        # env:
        #   GITHUB_TOKEN: ${{ secrets.key_release }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release Test
          repo: ${{ secrets.owner }}/${{ secrets.SAVE_RELEASE }}
          repo-token: ${{ secrets.key_release }}
