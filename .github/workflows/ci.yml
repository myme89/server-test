name: ci-test

on:
  push:
    branches: ["master"]
    # tags:
    #   - 'v*'

jobs:
  test:
    name: Test
    runs-on: [self-hosted, linux]

    strategy:
      matrix:
        mongodb-version: ['6.0']

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:15
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 1
          POSTGRES_DB: postgres
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

        
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      mysql:
        image: mysql:latest
        env:
          MYSQL_DATABASE: test
          MYSQL_USER: nhatnt
          MYSQL_PASSWORD: 1
        ports:
        - 33306:3306
        options: >-
          --health-cmd="mysqladmin ping" 
          --health-interval=10s --health-timeout=5s 
          --health-retries=3u


    steps:

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ^1.20
        id: go

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.9.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }} 
          mongodb-db: data
          mongodb-port: 27017

      - name: Test
        run: make test

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release Test
